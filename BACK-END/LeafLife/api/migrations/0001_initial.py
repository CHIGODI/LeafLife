# Generated by Django 4.2.16 on 2024-09-21 10:54

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Bed',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bed_number', models.CharField(max_length=10)),
                ('bed_type', models.CharField(choices=[('raised', 'Raised Bed'), ('in_ground', 'In-Ground Bed'), ('container', 'Container Bed')], default='raised', max_length=20)),
                ('length', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('width', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('soil_type', models.CharField(choices=[('clay', 'Clay'), ('sandy', 'Sandy'), ('loam', 'Loam'), ('peat', 'Peat'), ('blackcotton', 'BlackCotton'), ('redsoil', 'RedSoil')], default='loam', max_length=255)),
            ],
            options={
                'db_table': 'beds',
            },
        ),
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('variety', models.CharField(max_length=100)),
                ('planting_date', models.DateField(default=datetime.date.today)),
                ('harvest_date', models.DateField(default='2024-12-20')),
                ('status', models.CharField(choices=[('G', 'Growing'), ('H', 'Harvested'), ('D', 'Dead')], default='G', max_length=1)),
                ('bed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crops', to='api.bed')),
            ],
            options={
                'db_table': 'crops',
            },
        ),
        migrations.CreateModel(
            name='Garden',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('lat', models.CharField(max_length=255)),
                ('long', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gardens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'gardens',
            },
        ),
        migrations.CreateModel(
            name='Inspection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inspection_date', models.DateField()),
                ('notes', models.TextField()),
                ('garden_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspections', to='api.garden')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'inspections',
            },
        ),
        migrations.CreateModel(
            name='Harvest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity_harvested', models.PositiveIntegerField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('bed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='harvests', to='api.bed')),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='harvests', to='api.crop')),
            ],
            options={
                'db_table': 'harvests',
            },
        ),
        migrations.CreateModel(
            name='CropRotation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('current_crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='current_crop_rotations', to='api.crop')),
                ('garden', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crop_rotations', to='api.garden')),
                ('previous_crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='previous_crop_rotations', to='api.crop')),
            ],
            options={
                'db_table': 'crop_rotations',
            },
        ),
        migrations.AddField(
            model_name='bed',
            name='garden',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beds', to='api.garden'),
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('activity_type', models.CharField(choices=[('fertilization', 'Fertilization'), ('watering', 'Watering'), ('weed_control', 'Weed Control'), ('pest_control', 'Pest Control'), ('inspection', 'Inspection'), ('planting', 'Planting'), ('pruning', 'Pruning'), ('transplanting', 'Transplanting'), ('other', 'Other')], default='inspection', max_length=20)),
                ('date', models.DateField()),
                ('notes', models.TextField()),
                ('bed', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activities', to='api.bed')),
                ('garden', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='api.garden')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'activities',
            },
        ),
    ]
